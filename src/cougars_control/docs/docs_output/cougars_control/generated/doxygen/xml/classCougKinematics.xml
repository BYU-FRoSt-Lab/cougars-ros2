<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classCougKinematics" kind="class" language="C++" prot="public">
    <compoundname>CougKinematics</compoundname>
    <basecompoundref prot="public" virt="non-virtual">rclcpp::Node</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classCougKinematics_1a4213abadeb632f32a9b2be2bf1d67edd" prot="private" static="no" mutable="no">
        <type>rclcpp::Publisher&lt; frost_interfaces::msg::UCommand &gt;::SharedPtr</type>
        <definition>rclcpp::Publisher&lt;frost_interfaces::msg::UCommand&gt;::SharedPtr CougKinematics::command_publisher_</definition>
        <argsstring></argsstring>
        <name>command_publisher_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/coug_kinematics.cpp" line="124" column="7" bodyfile="src/coug_kinematics.cpp" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCougKinematics_1a4315a6ee05f2a927d2c754314c6dd3a4" prot="private" static="no" mutable="no">
        <type>rclcpp::Subscription&lt; frost_interfaces::msg::UCommand &gt;::SharedPtr</type>
        <definition>rclcpp::Subscription&lt;frost_interfaces::msg::UCommand&gt;::SharedPtr CougKinematics::command_subscription_</definition>
        <argsstring></argsstring>
        <name>command_subscription_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/coug_kinematics.cpp" line="126" column="7" bodyfile="src/coug_kinematics.cpp" bodystart="126" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCougKinematics_1a3d5324d55a7a97e251224a408ea7f631" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CougKinematics::CougKinematics</definition>
        <argsstring>()</argsstring>
        <name>CougKinematics</name>
        <briefdescription>
<para>Creates a new kinematics node. </para>
        </briefdescription>
        <detaileddescription>
<para>This constructor creates a new kinematics node with default values. </para>
        </detaileddescription>
        <inbodydescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>trim_ratio</parametername>
</parameternamelist>
<parameterdescription>
<para>The trim ratio is used to adjust the control commands to account for thruster trim. The default value is 0.0.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>top_fin_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset for the top fin to make it align properly. The default value is 0.0.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right_fin_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset for the right fin (from the front) to make it align properly. The default value is 0.0.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>left_fin_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset for the left fin (from the front) to make it align properly. The default value is 0.0.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Kinematics command publisher.</para>
<para>This publisher publishes the commands to the &quot;kinematics/command&quot; topic. It uses the UCommand message type.</para>
<para>Controls command subscriber.</para>
<para>This subscriber subscribes to the &quot;controls/command&quot; topic. It uses the UCommand message type.</para>
        </inbodydescription>
        <location file="src/coug_kinematics.cpp" line="38" column="3" bodyfile="src/coug_kinematics.cpp" bodystart="38" bodyend="92"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classCougKinematics_1a4fbcd3d7902f6dbc160b67c7143cde83" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CougKinematics::command_callback</definition>
        <argsstring>(const frost_interfaces::msg::UCommand &amp;msg)</argsstring>
        <name>command_callback</name>
        <param>
          <type>const frost_interfaces::msg::UCommand &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Callback function for the controls/command subscription. </para>
        </briefdescription>
        <detaileddescription>
<para>This method is called whenever a new controls command message is received. It adds the declared offsets and trim ratio to the commands and publishes the new modified commands.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/coug_kinematics.cpp" line="104" column="8" bodyfile="src/coug_kinematics.cpp" bodystart="104" bodyend="120"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>CougUV kinematics node. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Nelson Durrant </para>
</simplesect>
<simplesect kind="date"><para>September 2024</para>
</simplesect>
This node subscribes to the &quot;controls/command&quot; topic and modifies the commands to account for thruster trim and fin offsets. The modified commands are then published to the &quot;kinematics/command&quot; topic.</para>
<para>Subscribes:<itemizedlist>
<listitem><para>controls/command (frost_interfaces/msg/UCommand) Publishes:</para>
</listitem><listitem><para>kinematics/command (frost_interfaces/msg/UCommand) </para>
</listitem></itemizedlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>CougKinematics</label>
        <link refid="classCougKinematics"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>rclcpp::Node</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>CougKinematics</label>
        <link refid="classCougKinematics"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>rclcpp::Node</label>
      </node>
    </collaborationgraph>
    <location file="src/coug_kinematics.cpp" line="31" column="1" bodyfile="src/coug_kinematics.cpp" bodystart="31" bodyend="127"/>
    <listofallmembers>
      <member refid="classCougKinematics_1a4fbcd3d7902f6dbc160b67c7143cde83" prot="private" virt="non-virtual"><scope>CougKinematics</scope><name>command_callback</name></member>
      <member refid="classCougKinematics_1a4213abadeb632f32a9b2be2bf1d67edd" prot="private" virt="non-virtual"><scope>CougKinematics</scope><name>command_publisher_</name></member>
      <member refid="classCougKinematics_1a4315a6ee05f2a927d2c754314c6dd3a4" prot="private" virt="non-virtual"><scope>CougKinematics</scope><name>command_subscription_</name></member>
      <member refid="classCougKinematics_1a3d5324d55a7a97e251224a408ea7f631" prot="public" virt="non-virtual"><scope>CougKinematics</scope><name>CougKinematics</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

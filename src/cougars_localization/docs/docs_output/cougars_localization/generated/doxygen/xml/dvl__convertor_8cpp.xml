<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="dvl__convertor_8cpp" kind="file" language="C++">
    <compoundname>dvl_convertor.cpp</compoundname>
    <includes local="no">chrono</includes>
    <includes local="no">functional</includes>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes local="yes">dvl_msgs/msg/dvl.hpp</includes>
    <includes local="yes">dvl_msgs/msg/dvldr.hpp</includes>
    <includes local="yes">geometry_msgs/msg/pose_with_covariance_stamped.hpp</includes>
    <includes local="yes">geometry_msgs/msg/twist_with_covariance_stamped.hpp</includes>
    <includes local="yes">rclcpp/rclcpp.hpp</includes>
    <includes local="yes">std_msgs/msg/float64.hpp</includes>
    <includes local="yes">std_msgs/msg/string.hpp</includes>
    <includes local="no">vector</includes>
    <includes local="no">Eigen/Dense</includes>
    <includes local="no">Eigen/Geometry</includes>
    <includes local="no">math.h</includes>
    <includes local="no">stdint.h</includes>
    <incdepgraph>
      <node id="3">
        <label>functional</label>
      </node>
      <node id="6">
        <label>dvl_msgs/msg/dvl.hpp</label>
      </node>
      <node id="17">
        <label>stdint.h</label>
      </node>
      <node id="15">
        <label>Eigen/Geometry</label>
      </node>
      <node id="5">
        <label>string</label>
      </node>
      <node id="10">
        <label>rclcpp/rclcpp.hpp</label>
      </node>
      <node id="1">
        <label>src/dvl_convertor.cpp</label>
        <link refid="dvl__convertor_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>Eigen/Dense</label>
      </node>
      <node id="11">
        <label>std_msgs/msg/float64.hpp</label>
      </node>
      <node id="13">
        <label>vector</label>
      </node>
      <node id="9">
        <label>geometry_msgs/msg/twist_with_covariance_stamped.hpp</label>
      </node>
      <node id="7">
        <label>dvl_msgs/msg/dvldr.hpp</label>
      </node>
      <node id="16">
        <label>math.h</label>
      </node>
      <node id="2">
        <label>chrono</label>
      </node>
      <node id="8">
        <label>geometry_msgs/msg/pose_with_covariance_stamped.hpp</label>
      </node>
      <node id="12">
        <label>std_msgs/msg/string.hpp</label>
      </node>
      <node id="4">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innerclass refid="classDVLConvertor" prot="public">DVLConvertor</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="dvl__convertor_8cpp_1a40ba3dcf6fce3a49be9444da2f08b012" prot="public" static="no" mutable="no">
        <type>rmw_qos_profile_t</type>
        <definition>rmw_qos_profile_t qos_profile</definition>
        <argsstring></argsstring>
        <name>qos_profile</name>
        <initializer>= rmw_qos_profile_sensor_data</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dvl_convertor.cpp" line="22" column="19" bodyfile="src/dvl_convertor.cpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dvl__convertor_8cpp_1a780fcbbccc2b3ce6d42fd10e0638cd3b" prot="public" static="no" mutable="no">
        <type>auto</type>
        <definition>auto qos</definition>
        <argsstring></argsstring>
        <name>qos</name>
        <initializer>= rclcpp::QoS(
    rclcpp::QoSInitialization(qos_profile.history, qos_profile.depth),
    qos_profile)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dvl_convertor.cpp" line="23" column="6" bodyfile="src/dvl_convertor.cpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="dvl__convertor_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dvl_convertor.cpp" line="164" column="5" bodyfile="src/dvl_convertor.cpp" bodystart="164" bodyend="169"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;chrono&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dvl_msgs/msg/dvl.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dvl_msgs/msg/dvldr.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;geometry_msgs/msg/pose_with_covariance_stamped.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;geometry_msgs/msg/twist_with_covariance_stamped.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;rclcpp/rclcpp.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;std_msgs/msg/float64.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;std_msgs/msg/string.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Eigen/Dense&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Eigen/Geometry&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::placeholders::_1;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal">rmw_qos_profile_t<sp/>qos_profile<sp/>=<sp/>rmw_qos_profile_sensor_data;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>qos<sp/>=<sp/>rclcpp::QoS(</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>rclcpp::QoSInitialization(qos_profile.history,<sp/>qos_profile.depth),</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>qos_profile);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="classDVLConvertor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classDVLConvertor" kindref="compound">DVLConvertor</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>rclcpp::Node<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><ref refid="classDVLConvertor" kindref="compound">DVLConvertor</ref>()<sp/>:<sp/>Node(</highlight><highlight class="stringliteral">&quot;dvl_convertor&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>publisher_dvl_depth<sp/>=</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;create_publisher&lt;std_msgs::msg::Float64&gt;(</highlight><highlight class="stringliteral">&quot;dvl_dfb&quot;</highlight><highlight class="normal">,<sp/>10);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>publisher_dvl_velocity<sp/>=</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;create_publisher&lt;geometry_msgs::msg::TwistWithCovarianceStamped&gt;(</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;dvl_velocity&quot;</highlight><highlight class="normal">,<sp/>10);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>publisher_dvl_dead_reckoning<sp/>=</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;create_publisher&lt;geometry_msgs::msg::PoseWithCovarianceStamped&gt;(</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;dvl_dead_reckoning&quot;</highlight><highlight class="normal">,<sp/>10);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>subscriber_dvl_data<sp/>=<sp/>this-&gt;create_subscription&lt;dvl_msgs::msg::DVL&gt;(</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;/dvl/data&quot;</highlight><highlight class="normal">,<sp/>qos,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::bind(&amp;DVLConvertor::dvl_data_callback,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_1));</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>subscriber_dvl_position<sp/>=<sp/>this-&gt;create_subscription&lt;dvl_msgs::msg::DVLDR&gt;(</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;/dvl/position&quot;</highlight><highlight class="normal">,<sp/>qos,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::bind(&amp;DVLConvertor::dvl_pos_callback,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_1));</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dvl_data_callback(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dvl_msgs::msg::DVL::SharedPtr<sp/>msg)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>geometry_msgs::msg::TwistWithCovarianceStamped<sp/>stamped_msg;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>stamped_msg.header.stamp<sp/>=<sp/>msg-&gt;header.stamp;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>double<sp/>msg_time<sp/>=<sp/>msg-&gt;time<sp/>TODO:<sp/>Figure<sp/>how<sp/>to<sp/>use<sp/>the<sp/>NTP<sp/>time<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DVL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stamped_msg.header.stamp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>filling<sp/>in<sp/>the<sp/>upper<sp/>left<sp/>corner<sp/>of<sp/>the<sp/>6X6<sp/>covariance<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>defaultValue<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>36;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>%<sp/>6<sp/>&lt;<sp/>3<sp/>&amp;&amp;<sp/>i<sp/>&lt;<sp/>15)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stamped_msg.twist.covariance[i]<sp/>=<sp/>msg-&gt;covariance[index];</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index++;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stamped_msg.twist.covariance[i]<sp/>=<sp/>defaultValue;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>stamped_msg.twist.twist.linear.x<sp/>=<sp/>msg-&gt;velocity.x;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>negate<sp/>z<sp/>and<sp/>y<sp/>--<sp/>will<sp/>this<sp/>mess<sp/>with<sp/>covariance?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>stamped_msg.twist.twist.linear.y<sp/>=<sp/>-1.0<sp/>*<sp/>msg-&gt;velocity.y;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>stamped_msg.twist.twist.linear.z<sp/>=<sp/>-1.0<sp/>*<sp/>msg-&gt;velocity.z;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>publisher_dvl_velocity-&gt;publish(stamped_msg);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>degreesToRadians(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>degrees)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>degrees<sp/>*<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(M_PI)<sp/>/<sp/>180.0f;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dvl_pos_callback(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dvl_msgs::msg::DVLDR::SharedPtr<sp/>msg)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>geometry_msgs::msg::PoseWithCovarianceStamped<sp/>stamped_msg;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>stamped_msg.header.stamp<sp/>=<sp/>msg-&gt;header.stamp;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>stamped_msg.header.frame_id<sp/>=</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;odom&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>odom<sp/>is<sp/>the<sp/>coordinate<sp/>frame<sp/>of<sp/>the<sp/>dvl<sp/>in<sp/>robot_localization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>stamped_msg.pose.pose.position.x<sp/>=<sp/>msg-&gt;position.x;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>stamped_msg.pose.pose.position.y<sp/>=<sp/>-1.0<sp/>*<sp/>msg-&gt;position.y;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>stamped_msg.pose.pose.position.z<sp/>=<sp/>-1.0<sp/>*<sp/>msg-&gt;position.z;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>yaw_deg<sp/>=<sp/>msg-&gt;yaw;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pitch_deg<sp/>=<sp/>msg-&gt;pitch;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>roll_deg<sp/>=<sp/>msg-&gt;roll;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>to<sp/>radians</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>yaw_rad<sp/>=<sp/>degreesToRadians(yaw_deg);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pitch_rad<sp/>=<sp/>degreesToRadians(pitch_deg);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>roll_rad<sp/>=<sp/>degreesToRadians(roll_deg);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Option<sp/>1:<sp/>use<sp/>properties<sp/>of<sp/>quaternions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>already<sp/>tested<sp/>because<sp/>this<sp/>was<sp/>easy<sp/>to<sp/>do<sp/>in<sp/>the<sp/>factor<sp/>graph<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>i*(w<sp/>+<sp/>xi<sp/>+<sp/>yj<sp/>+<sp/>zk)*i</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>=<sp/>i*(wi<sp/>-<sp/>x<sp/>-<sp/>yk<sp/>+<sp/>zj)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>=<sp/>-w<sp/>-<sp/>xi<sp/>+<sp/>yj<sp/>+<sp/>zk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3f<sp/>R;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>R<sp/>=<sp/>Eigen::AngleAxisf(yaw_rad,<sp/>Eigen::Vector3f::UnitZ())<sp/>*</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::AngleAxisf(pitch_rad,<sp/>Eigen::Vector3f::UnitY())<sp/>*</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::AngleAxisf(roll_rad,<sp/>Eigen::Vector3f::UnitX());</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Quaternionf<sp/>quaternion_R(R);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>stamped_msg.pose.pose.orientation.x<sp/>=<sp/>-quaternion_R.x();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>stamped_msg.pose.pose.orientation.y<sp/>=<sp/>quaternion_R.y();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>stamped_msg.pose.pose.orientation.z<sp/>=<sp/>quaternion_R.z();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>stamped_msg.pose.pose.orientation.w<sp/>=<sp/>-quaternion_R.w();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Option<sp/>2:<sp/>convert<sp/>with<sp/>rotations.<sp/>Same<sp/>effect<sp/>but<sp/>more<sp/>readable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Eigen::Matrix3f<sp/>R;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>R<sp/>=<sp/>Eigen::AngleAxisf(M_PI,<sp/>Eigen::Vector3f::UnitX())<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>Eigen::AngleAxisf(yaw_rad,<sp/>Eigen::Vector3f::UnitZ())<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>Eigen::AngleAxisf(pitch_rad,<sp/>Eigen::Vector3f::UnitY())<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>Eigen::AngleAxisf(roll_rad,<sp/>Eigen::Vector3f::UnitX())<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>Eigen::AngleAxisf(M_PI,<sp/>Eigen::Vector3f::UnitX());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Eigen::Quaternionf<sp/>quaternion_R(R);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>stamped_msg.pose.pose.orientation.x<sp/>=<sp/>quaternion_R.x();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>stamped_msg.pose.pose.orientation.y<sp/>=<sp/>quaternion_R.y();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>stamped_msg.pose.pose.orientation.z<sp/>=<sp/>quaternion_R.z();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>stamped_msg.pose.pose.orientation.w<sp/>=<sp/>quaternion_R.w();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Eigen::Matrix3f<sp/>R;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>R<sp/>=<sp/>Eigen::AngleAxisf(yaw_rad,<sp/>Eigen::Vector3f::UnitZ())*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Eigen::AngleAxisf(pitch_rad,<sp/>Eigen::Vector3f::UnitY())<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Eigen::AngleAxisf(roll_rad,<sp/>Eigen::Vector3f::UnitX())<sp/>;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Eigen::Quaternionf<sp/>quaternion_R(R);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stamped_msg.pose.pose.orientation.x<sp/>=<sp/>quaternion_R.x();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stamped_msg.pose.pose.orientation.y<sp/>=<sp/>quaternion_R.y();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stamped_msg.pose.pose.orientation.z<sp/>=<sp/>quaternion_R.z();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stamped_msg.pose.pose.orientation.w<sp/>=<sp/>quaternion_R.w();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Check<sp/>and<sp/>tune<sp/>covariance<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pvr<sp/>=<sp/>msg-&gt;pos_std<sp/>*<sp/>msg-&gt;pos_std;<sp/></highlight><highlight class="comment">//<sp/>variance<sp/>=<sp/>std<sp/>squared</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yvr<sp/>=<sp/>1.0;<sp/></highlight><highlight class="comment">//<sp/>An<sp/>estimate<sp/>for<sp/>the<sp/>variance<sp/>in<sp/>yaw</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>stamped_msg.pose.covariance<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pvr,<sp/>0.0,<sp/>0.0,<sp/>0.0,<sp/>0.0,<sp/>0.0,<sp/>0.0,<sp/>pvr,<sp/>0.0,<sp/>0.0,<sp/>0.0,<sp/>0.0,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0,<sp/>0.0,<sp/>pvr,<sp/>0.0,<sp/>0.0,<sp/>0.0,<sp/>0.0,<sp/>0.0,<sp/>0.0,<sp/>0.0,<sp/>0.0,<sp/>0.0,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0,<sp/>0.0,<sp/>0.0,<sp/>0.0,<sp/>0.0,<sp/>0.0,<sp/>0.0,<sp/>0.0,<sp/>0.0,<sp/>0.0,<sp/>0.0,<sp/>yvr,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>publisher_dvl_dead_reckoning-&gt;publish(stamped_msg);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>publisher<sp/>localizatoin<sp/>pkg<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>rclcpp::Publisher&lt;geometry_msgs::msg::TwistWithCovarianceStamped&gt;::SharedPtr</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>publisher_dvl_velocity;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>rclcpp::Publisher&lt;geometry_msgs::msg::PoseWithCovarianceStamped&gt;::SharedPtr</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>publisher_dvl_dead_reckoning;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>rclcpp::Publisher&lt;std_msgs::msg::Float64&gt;::SharedPtr<sp/>publisher_dvl_depth;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>subscribers<sp/>-<sp/>listening<sp/>to<sp/>dvl<sp/>driver</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>rclcpp::Subscription&lt;dvl_msgs::msg::DVL&gt;::SharedPtr<sp/>subscriber_dvl_data;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>rclcpp::Subscription&lt;dvl_msgs::msg::DVLDR&gt;::SharedPtr<sp/>subscriber_dvl_position;</highlight></codeline>
<codeline lineno="162"><highlight class="normal">};</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[])<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>rclcpp::init(argc,<sp/>argv);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>rclcpp::spin(std::make_shared&lt;DVLConvertor&gt;());</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>rclcpp::shutdown();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/dvl_convertor.cpp"/>
  </compounddef>
</doxygen>
